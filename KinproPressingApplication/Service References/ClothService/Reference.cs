//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace KinproPressingApplication.ClothService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="GetAllClothsSetting_Result", Namespace="http://schemas.datacontract.org/2004/07/KinproService")]
    [System.SerializableAttribute()]
    public partial class GetAllClothsSetting_Result : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ClothDescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ItemIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Nullable<int> PriceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] ProductImageUrlField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ClothDescription {
            get {
                return this.ClothDescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.ClothDescriptionField, value) != true)) {
                    this.ClothDescriptionField = value;
                    this.RaisePropertyChanged("ClothDescription");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ItemId {
            get {
                return this.ItemIdField;
            }
            set {
                if ((this.ItemIdField.Equals(value) != true)) {
                    this.ItemIdField = value;
                    this.RaisePropertyChanged("ItemId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Nullable<int> Price {
            get {
                return this.PriceField;
            }
            set {
                if ((this.PriceField.Equals(value) != true)) {
                    this.PriceField = value;
                    this.RaisePropertyChanged("Price");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] ProductImageUrl {
            get {
                return this.ProductImageUrlField;
            }
            set {
                if ((object.ReferenceEquals(this.ProductImageUrlField, value) != true)) {
                    this.ProductImageUrlField = value;
                    this.RaisePropertyChanged("ProductImageUrl");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="ClothService.IClothService")]
    public interface IClothService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/GetAllClothsSetting", ReplyAction="http://tempuri.org/IClothService/GetAllClothsSettingResponse")]
        KinproPressingApplication.ClothService.GetAllClothsSetting_Result[] GetAllClothsSetting();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/GetAllClothsSetting", ReplyAction="http://tempuri.org/IClothService/GetAllClothsSettingResponse")]
        System.Threading.Tasks.Task<KinproPressingApplication.ClothService.GetAllClothsSetting_Result[]> GetAllClothsSettingAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/AddCloth", ReplyAction="http://tempuri.org/IClothService/AddClothResponse")]
        void AddCloth(string name, int price, string ClothDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/AddCloth", ReplyAction="http://tempuri.org/IClothService/AddClothResponse")]
        System.Threading.Tasks.Task AddClothAsync(string name, int price, string ClothDescription);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/UpdateCloth", ReplyAction="http://tempuri.org/IClothService/UpdateClothResponse")]
        void UpdateCloth(string name, int itemId, int price, string clothDescription, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/UpdateCloth", ReplyAction="http://tempuri.org/IClothService/UpdateClothResponse")]
        System.Threading.Tasks.Task UpdateClothAsync(string name, int itemId, int price, string clothDescription, int clientId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/DeleteCloth", ReplyAction="http://tempuri.org/IClothService/DeleteClothResponse")]
        void DeleteCloth(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IClothService/DeleteCloth", ReplyAction="http://tempuri.org/IClothService/DeleteClothResponse")]
        System.Threading.Tasks.Task DeleteClothAsync(int id);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IClothServiceChannel : KinproPressingApplication.ClothService.IClothService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ClothServiceClient : System.ServiceModel.ClientBase<KinproPressingApplication.ClothService.IClothService>, KinproPressingApplication.ClothService.IClothService {
        
        public ClothServiceClient() {
        }
        
        public ClothServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public ClothServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClothServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public ClothServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public KinproPressingApplication.ClothService.GetAllClothsSetting_Result[] GetAllClothsSetting() {
            return base.Channel.GetAllClothsSetting();
        }
        
        public System.Threading.Tasks.Task<KinproPressingApplication.ClothService.GetAllClothsSetting_Result[]> GetAllClothsSettingAsync() {
            return base.Channel.GetAllClothsSettingAsync();
        }
        
        public void AddCloth(string name, int price, string ClothDescription) {
            base.Channel.AddCloth(name, price, ClothDescription);
        }
        
        public System.Threading.Tasks.Task AddClothAsync(string name, int price, string ClothDescription) {
            return base.Channel.AddClothAsync(name, price, ClothDescription);
        }
        
        public void UpdateCloth(string name, int itemId, int price, string clothDescription, int clientId) {
            base.Channel.UpdateCloth(name, itemId, price, clothDescription, clientId);
        }
        
        public System.Threading.Tasks.Task UpdateClothAsync(string name, int itemId, int price, string clothDescription, int clientId) {
            return base.Channel.UpdateClothAsync(name, itemId, price, clothDescription, clientId);
        }
        
        public void DeleteCloth(int id) {
            base.Channel.DeleteCloth(id);
        }
        
        public System.Threading.Tasks.Task DeleteClothAsync(int id) {
            return base.Channel.DeleteClothAsync(id);
        }
    }
}
